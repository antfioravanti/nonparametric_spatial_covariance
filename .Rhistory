# MASTERARBEIT DARWIN
#-------------------------------------------------------------------------------
if (!require(MASS)) install.packages("MASS"); library(MASS)
if (!require(ggplot2)) install.packages("ggplot2"); library(ggplot2)
if (!require(foreach)) install.packages("foreach"); library(foreach)
if (!require(doParallel)) install.packages("doParallel"); library(doParallel)
if (!require(tictoc)) install.packages("tictoc"); library(tictoc)
if (!require(reshape2)) install.packages("reshape2"); library(reshape2)
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
source("utils_functions.R") # Upload functions in separate script
set.seed(1234)# set seed for replication
#-------------------------------------------------------------------------------
# SIMULATION OF GRID
xdim = 50 # horizontal size
ydim = 50 #vertical size
# Erzeugt zufällige Koordinaten im Bereich [0, 1] für das Raster
grid = data.frame(x = runif(xdim, 0, 1), y = runif(ydim, 0, 1))
#-------------------------------------------------------------------------------
plot(grid$x, grid$y,
main = "Spatial Locations Generated by Random Uniform Distribution",
xlab = "x-coordinate", ylab = "y-coordinate",
pch = 16, col = "blue")
text(grid$x, grid$y, labels = 1:nrow(grid), pos = 3, cex = 0.7, col = "red")
#-------------------------------------------------------------------------------
# GENERATE TRUE ANALYTICAL COVARIANCE
#-------------------------------------------------------------------------------
#sigma = 1
#phi = 1/3
#true_covariance = cov_exponential(grid, sigma, phi, method = "euclidean")
sigma = 1
alpha1 = 1
alpha2 = 1
lambda1 = 1
lambda2 = 1
true_covariance = ModifiedExponentialCovariance(grid,sigma,alpha1,alpha2,lambda1
,lambda2,test_sep =T)$covariance
#plot_matrix(grid, sigma = 1, phi = 5)
#plot_matrix_modi(grid,sigma,alpha1,alpha2,lambda1, lambda2, test_sep = FALSE)
#-------------------------------------------------------------------------------
#Check covariance is positive semidefinite
is_positive_semi_definite(true_covariance)
#-------------------------------------------------------------------------------
# SIMULATE SPATIAL GAUSSIAN RANDOM FIELD
X = mvrnorm(n = 1, mu = rep(0, nrow(grid)), Sigma = true_covariance)
grid$sim = X
#Plot the process where the colors indicate the value of the spatial process
ggplot(grid, aes(x = x, y = y, color = sim)) +
geom_point(size = 5) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Simulated Spatial Data", x = "X Coordinate", y = "Y Coordinate",
color = "Value") +
theme_minimal()
